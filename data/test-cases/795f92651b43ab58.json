{
  "uid" : "795f92651b43ab58",
  "name" : "test_junit_passed",
  "historyId" : "pytest:pipeline.integration_tests.functional_tests.integ_tests_junit#test_junit_passed",
  "time" : {
    "duration" : 4
  },
  "status" : "failed",
  "statusDetails" : {
    "message" : "assert False",
    "trace" : "report_path = 'junit_results/integration.xml'\n\n    def test_junit_passed(report_path):\n        report = JunitHelper(report_path)\n        case_list = report.get_test_attributes()\n        contains_pass = False\n    \n        for case in case_list:\n            if case.is_match(\n                    \"should pass if an element is not supposed to exist and is missing #integrationSuite\") and case.is_passed == \"true\":\n                contains_pass = True\n>       assert contains_pass\nE       assert False\n\npipeline/integration_tests/functional_tests/integ_tests_junit.py:18: AssertionError",
    "flaky" : false
  },
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "resultFormat",
    "value" : "junit"
  }, {
    "name" : "suite",
    "value" : "pytest"
  }, {
    "name" : "testClass",
    "value" : "pipeline.integration_tests.functional_tests.integ_tests_junit"
  }, {
    "name" : "package",
    "value" : "pipeline.integration_tests.functional_tests.integ_tests_junit"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Risk Based Testing",
      "matchedStatuses" : [ "broken", "failed", "skipped" ],
      "flaky" : false
    }, {
      "name" : "Product defects",
      "matchedStatuses" : [ "failed" ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "795f92651b43ab58.json",
  "statusDetailsSafe" : {
    "message" : "assert False",
    "trace" : "report_path = 'junit_results/integration.xml'\n\n    def test_junit_passed(report_path):\n        report = JunitHelper(report_path)\n        case_list = report.get_test_attributes()\n        contains_pass = False\n    \n        for case in case_list:\n            if case.is_match(\n                    \"should pass if an element is not supposed to exist and is missing #integrationSuite\") and case.is_passed == \"true\":\n                contains_pass = True\n>       assert contains_pass\nE       assert False\n\npipeline/integration_tests/functional_tests/integ_tests_junit.py:18: AssertionError",
    "flaky" : false
  },
  "statusMessage" : {
    "present" : true
  },
  "parameterValues" : [ ]
}